"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Storage settings
MEDIA_URL = "/media/"  # URL where media files will be served
MEDIA_ROOT = "/mnt/volume/uploads/"  # Local storage path

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ys2%4h5a2p-d6+d_t+02k(kah1i+u_@x%u2dzz!@#v*+9a8&p)'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = os.getenv("DJANGO_DEBUG", "False") == "True"  # Use environment variable
DEBUG = True
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': '/backend/error.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}
# Ensure Django trusts AWS ALB for HTTPS
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True  # Allow Django to use forwarded headers

# Force HTTPS in production
SECURE_SSL_REDIRECT = False  # Redirect all HTTP requests to HTTPS

SECURE_BROWSER_XSS_FILTER = True  # Protects against XSS attacks
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents MIME-type security risks
SESSION_COOKIE_SECURE = True  # Ensures cookies are sent over HTTPS only
CSRF_COOKIE_SECURE = True  # Ensures CSRF cookies are sent over HTTPS only
SESSION_COOKIE_SAMESITE = "None"  # Needed for cross-site requests

ALLOWED_HOSTS = [
    "0.0.0.0",
    "127.0.0.1",
    "localhost",
    "backend_locale",  # Ensure this matches the Docker service name
    "nginx",  # If Nginx is forwarding requests
    "demo.experiencebylocals.com"  # Ensure this includes your external domain
]




CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ["GET", "POST", "OPTIONS"]
CORS_ALLOW_HEADERS = ["*"]

# Application definition

INSTALLED_APPS = [
    #django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #added plugins/apps
    'corsheaders',

    #my apps
    'general.apps.GeneralConfig'
]


MIDDLEWARE = [
     #added
    'corsheaders.middleware.CorsMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

#leave as utc, convert to local time zone at frontend only on display
TIME_ZONE = 'UTC' 

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
#STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
#STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#cors stuff

CORS_ORIGIN_WHITELIST = [
    'https://localhost',
    'https://0.0.0.0',
    'http://localhost',
    'http://0.0.0.0',
    "https://demo.experiencebylocals.com"
]

CORS_ALLOWED_ORIGINS = [
    'https://localhost',
    'https://0.0.0.0',
    "http://localhost",
    'http://0.0.0.0',
    "https://demo.experiencebylocals.com"

]

CSRF_TRUSTED_ORIGINS = [
    "https://localhost",
    "http://localhost",
    "https://0.0.0.0",
    "http://0.0.0.0",
    "https://demo.experiencebylocals.com"
]

CORS_ALLOW_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS = [
    "*",
    "Content-Type",  # Must be explicitly allowed
    "Authorization",
    "X-CSRFToken",
    "X-Session-ID",
    "X-Requested-With"
]  # Ensures frontend can send required headers

SESSION_ENGINE = "django.contrib.sessions.backends.db"

